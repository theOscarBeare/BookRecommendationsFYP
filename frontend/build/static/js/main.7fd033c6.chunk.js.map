{"version":3,"sources":["DropDown.js","DataTable.jsx","Similar Recommendations.jsx","Similar to previouse Readings.jsx","App.js","serviceWorker.js","Profile.js","index.js"],"names":["props","className","href","useStyles1","makeStyles","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","classes","useTheme","count","page","rowsPerPage","onChangePage","IconButton","onClick","event","disabled","aria-label","direction","Math","ceil","max","createData","name","Books","age","rows","sort","a","b","useStyles2","table","minWidth","CustomPaginationActionsTable","React","useState","setPage","setRowsPerPage","emptyRows","min","length","TableContainer","component","Paper","Table","TableBody","slice","map","row","TableRow","key","TableCell","scope","align","style","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","label","value","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","target","ActionsComponent","SimilarRecommendationsActionsTable","SimilarToPreviousReadingsActionsTable","App","id","pageWrapId","outerContainerId","modal","trigger","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7fd033c6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\n\r\nexport default props => {\r\n  return (\r\n    <Menu>\r\n      <a className=\"menu-item\" href=\"./App.js\">\r\n        Home\r\n      </a>\r\n\r\n      <a className=\"menu-item\" href=\"/templates/profile.html\">\r\n        Profile\r\n      </a>\r\n\r\n      <a className=\"menu-item\" href=\"./RecommendedBooks.js\">\r\n        Recommended Books\r\n      </a>\r\n\r\n      <a className=\"menu-item\" href=\"/RandomBook\">\r\n        Random Book\r\n      </a>\r\n    </Menu>\r\n  );\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport Popup from 'reactjs-popup';\r\n\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = event => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = event => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = event => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = event => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, Books, age) {\r\n  return { name, Books, age };\r\n}\r\n\r\nconst rows = [\r\n  createData('Alan Turing', 305, 3.7),\r\n  createData('Tananbarn', 452, 25.0),\r\n  createData('Fred Brooks', 262, 16.0),\r\n  createData('Niklaus Wirth', 159, 6.0),\r\n  createData('Ada Lovelace', 356, 16.0),\r\n  createData('Dennis Ritchie', 408, 3.2),\r\n] .sort((a, b) => (a.Books < b.Books ? -1 : 1));\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nexport default function CustomPaginationActionsTable() {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"custom pagination table\">\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map(row => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.Books}</TableCell>\r\n              <TableCell align=\"right\">{row.age}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = event => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = event => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = event => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = event => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, Books, age) {\r\n  return { name, Books, age };\r\n}\r\n\r\nconst rows = [\r\n  createData('Grace Hopper', 305, 3.7),\r\n  createData('Alan Turing', 452, 25.0),\r\n  createData('Noam Chomsky', 262, 16.0),\r\n  createData('Donald Kunth', 159, 6.0),\r\n  createData('Tony Hoare', 356, 16.0),\r\n].sort((a, b) => (a.Books < b.Books ? -1 : 1));\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nexport default function SimilarRecommendationsActionsTable() {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"custom pagination table\">\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map(row => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.Books}</TableCell>\r\n              <TableCell align=\"right\">{row.age}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = event => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = event => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = event => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = event => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, Books, age) {\r\n  return { name, Books, age };\r\n}\r\n\r\nconst rows = [\r\n  createData('Charles Babbage', 305, 3.7),\r\n  createData('Tim Berners-Lee', 452, 25.0),\r\n  createData('David A. Patterson', 262, 16.0),\r\n  createData('Donald Kunth', 159, 6.0),\r\n  createData('Tony Hoare', 356, 16.0),\r\n].sort((a, b) => (a.Books < b.Books ? -1 : 1));\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nexport default function SimilarToPreviousReadingsActionsTable() {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"custom pagination table\">\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map(row => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.Books}</TableCell>\r\n              <TableCell align=\"right\">{row.age}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Card from './DropDown.js';\nimport CustomPaginationActionsTable from './DataTable.jsx';\nimport Popup from 'reactjs-popup';\nimport SimilarRecommendationsActionsTable from './Similar Recommendations';\nimport SimilarToPreviousReadingsActionsTable from './Similar to previouse Readings';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <div id=\"App\">\n              <Card pageWrapId={\"page-wrap\"} outerContainerId={\"App\"} />\n                <header className=\"App-header\">\n                    <h1 className=\"App-title\">Welcome to Book Recommendations</h1>\n                </header>\n              <div id=\"page-wrap\">\n                <body className=\"App-intro\">\n                    Featured Books of the day\n                    <CustomPaginationActionsTable/>\n                    <Popup modal trigger={<button>Similar Recommendations</button>}>\n                     <SimilarRecommendationsActionsTable/>\n                    </Popup>\n                <br>\n                </br>\n                Similar to what you have studied before\n                <SimilarToPreviousReadingsActionsTable/>\n\n\n                </body>\n                <footer>Final Year Project</footer>\n              </div>\n          </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from \"react\";\r\nimport Card from \"./DropDown\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nclass Profile extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n          <div id=\"App\">\r\n              <Card pageWrapId={\"page-wrap\"} outerContainerId={\"App\"} />\r\n                <header className=\"App-header\">\r\n                    <h1 className=\"App-title\">Profile</h1>\r\n                </header>\r\n              <div id=\"page-wrap\">\r\n                <body className=\"App-intro\">\r\n                    <p>This is the profile page</p>\r\n                </body>\r\n                <footer>Final Year Project</footer>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Profile from './Profile';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// ReactDOM.render(<Profile />, document.getElementById('profilePage'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}